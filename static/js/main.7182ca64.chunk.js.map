{"version":3,"sources":["components/Header.js","components/Character.js","components/NewProfile.js","actions/index.js","components/NewProfilePage.js","components/ThemeContext.js","components/FilterPanel.js","components/Pagination.js","components/Profile.js","components/ProfilesPage.js","components/ProfileDetailsPage.js","App.js","reportWebVitals.js","reducers/profiles.js","reducers/index.js","index.js"],"names":["Header","className","Character","name","gender","photoUrl","email","src","alt","GENDER_OPTIONS","NewProfile","onSave","initialValues","onSubmit","validationSchema","Yup","shape","required","touched","errors","type","placeholder","map","value","ADD_PROFILE","NewProfilePage","dispatch","useDispatch","profiles","useSelector","state","formData","resetForm","payload","profile","ThemeContext","React","createContext","STATUS_OPTIONS","FilterPanel","onStatusChange","onGenderChange","status","id","onChange","for","renderStatusFilter","renderGenderFilter","Pagination","currentPage","pageCount","onPageChange","disabled","onClick","Profile","image","species","origin","episode","onProfileClick","useState","episodeName","setEpisodeName","fetchEpisodeName","a","fetch","response","json","useEffect","title","ProfilesPage","setProfiles","pageInfo","setPageInfo","filterStatus","setFilterStatus","filterGender","setGenderStatus","setCurrentPage","history","useHistory","theme","useContext","fetchProfiles","params","URLSearchParams","toString","info","results","handleProfileClick","profileId","push","e","target","style","backgroundColor","background","pages","page","ProfileDetailsPage","setProfile","episodes","setEpisodes","useParams","fetchProfile","character","episodeIds","epUrl","index","lastIndexOf","substring","fetchEpisodeNames","Array","isArray","themes","light","color","dark","App","localStorage","getItem","currentTheme","setCurrentTheme","WebFont","load","google","families","Provider","checked","selectedTheme","setItem","path","component","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","action","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7182ca64.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Header.scss\";\n\nconst Header = () => (\n  <div className=\"header\">\n    <div className=\"text\">The Rick and Morty</div>\n  </div>\n);\n\nexport default Header;\n","import React from \"react\";\nimport \"./Character.scss\";\n\nconst Character = ({ name, gender, photoUrl, email }) => (\n  <div className=\"row character\">\n    <div className=\"image\">\n      <img src={photoUrl} alt=\"character's photo\" />\n    </div>\n    <div className=\"column character-info\">\n      <span className=\"name\">{name}</span>\n      <span className=\"text\">{gender}</span>\n      <span className=\"text\">{email}</span>\n    </div>\n  </div>\n);\n\nexport default Character;\n","import React from \"react\";\nimport { Formik, Field, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"./NewProfile.scss\";\n\nconst GENDER_OPTIONS = [\"Male\", \"Female\", \"Genderless\", \"Unknown\"];\n\nconst NewProfile = ({ onSave }) => {\n  const renderGenderOptions = () =>\n    GENDER_OPTIONS.map((gender) => (\n      <label>\n        <Field type=\"radio\" name=\"gender\" value={gender} />\n        {gender}\n      </label>\n    ));\n\n  return (\n    <Formik\n      initialValues={{\n        name: \"\",\n        email: \"\",\n        gender: \"Unknown\",\n        photoUrl:\n          \"https://png.pngtree.com/png-vector/20190704/ourlarge/pngtree-businessman-user-avatar-free-vector-png-image_1538405.jpg\",\n      }}\n      onSubmit={onSave}\n      validationSchema={Yup.object().shape({\n        name: Yup.string().required(\"This field is Required\"),\n        email: Yup.string().email().required(\"This field is Required\"),\n        photoUrl: Yup.string().required(\"This field is Required\"),\n      })}\n    >\n      {({ touched, errors }) => {\n        return (\n          <Form>\n            <div className=\"new-profile column\">\n              <h3>Add new character</h3>\n              <Field\n                className=\"input-field mb\"\n                name=\"name\"\n                type=\"text\"\n                placeholder=\"Enter name\"\n                className={\n                  errors.name && touched.name\n                    ? \"input-field error\"\n                    : \"input-field mb\"\n                }\n              />\n              {errors.name && touched.name && (\n                <div className=\"input-error-label\">{errors.name}</div>\n              )}\n              <Field\n                className={\n                  errors.email && touched.email\n                    ? \"input-field error\"\n                    : \"input-field mb\"\n                }\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"Enter email address\"\n              />\n              {errors.email && touched.email && (\n                <div className=\"input-error-label\">{errors.email}</div>\n              )}\n              <Field\n                name=\"photoUrl\"\n                type=\"text\"\n                placeholder=\"Enter photoUrl\"\n                className={\n                  errors.photoUrl && touched.photoUrl\n                    ? \"input-field error\"\n                    : \"input-field mb\"\n                }\n              />\n              {errors.photoUrl && touched.photoUrl && (\n                <div className=\"input-error-label\">{errors.photoUrl}</div>\n              )}\n              <div className=\"gender-selector\">{renderGenderOptions()}</div>\n              <div className=\"mb\" />\n              <button className=\"add-btn\" type=\"submit\">\n                Add\n              </button>\n            </div>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default NewProfile;\n","export const ADD_PROFILE = \"ADD_PROFILE\";\n\nexport const addProfile = (profile) => ({\n  type: ADD_PROFILE,\n  payload: profile,\n});\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Character from \"./Character\";\nimport NewProfile from \"./NewProfile\";\nimport { addProfile } from \"../actions\";\n\nconst NewProfilePage = () => {\n  const dispatch = useDispatch();\n  const profiles = useSelector((state) => state.profiles);\n\n  const handleSave = (formData, { resetForm }) => {\n    dispatch(addProfile(formData));\n    resetForm();\n  };\n\n  return (\n    <div className=\"new-profile-page\">\n      <NewProfile onSave={handleSave} />\n      {profiles.map((profile) => (\n        <Character {...profile} />\n      ))}\n    </div>\n  );\n};\n\nexport default NewProfilePage;\n","import React from \"react\";\n\nconst ThemeContext = React.createContext(\"\");\n\nexport default ThemeContext;\n","import React from \"react\";\nimport \"./FilterPanel.scss\";\n\nconst STATUS_OPTIONS = [\"All\", \"Alive\", \"Dead\", \"Unknown\"];\nconst GENDER_OPTIONS = [\"All\", \"Male\", \"Female\", \"Genderless\", \"Unknown\"];\n\nconst FilterPanel = ({ onStatusChange, onGenderChange }) => {\n  const renderStatusFilter = (status) => (\n    <div>\n      <input\n        type=\"radio\"\n        id={`${status}-status-choice`}\n        name=\"status\"\n        value={status}\n        onChange={onStatusChange}\n      />\n      <label for={`${status}-status-choice`}>{status}</label>\n    </div>\n  );\n\n  const renderGenderFilter = (gender) => (\n    <div>\n      <input\n        type=\"radio\"\n        id={`${gender}-gender-choice`}\n        name=\"gender\"\n        value={gender}\n        onChange={onGenderChange}\n      />\n      <label for={`${gender}-gender-choice`}>{gender}</label>\n    </div>\n  );\n\n  return (\n    <div className=\"filter-panel\">\n      <div className=\"filter\">\n        <span className=\"filter-label\">Select characters status:</span>\n        <div className=\"input-choices\">\n          {STATUS_OPTIONS.map((status) => renderStatusFilter(status))}\n        </div>\n      </div>\n      <div className=\"filter\">\n        <span className=\"filter-label\">Select characters gender:</span>\n        <div className=\"input-choices\">\n          {GENDER_OPTIONS.map((gender) => renderGenderFilter(gender))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FilterPanel;\n","import React from \"react\";\nimport \"./Pagination.scss\";\n\nconst Pagination = ({ currentPage, pageCount, onPageChange }) => {\n  return (\n    <div className=\"pagination\">\n      <button\n        className=\"btn\"\n        disabled={currentPage === 1}\n        onClick={() => onPageChange(1)}\n      >\n        First\n      </button>\n      <button\n        className=\"btn\"\n        disabled={currentPage === 1}\n        onClick={() => onPageChange(currentPage - 1)}\n      >\n        Prev\n      </button>\n      <button className=\"btn current-page\">{currentPage}</button>\n      <button\n        className=\"btn\"\n        disabled={currentPage === pageCount}\n        onClick={() => onPageChange(currentPage + 1)}\n      >\n        Next\n      </button>\n      <button className=\"btn\" onClick={() => onPageChange(pageCount)}>\n        Last\n      </button>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React, { useState, useEffect } from \"react\";\nimport \"./Profile.scss\";\n\nconst Profile = ({\n  id,\n  image,\n  name,\n  status,\n  species,\n  gender,\n  origin,\n  episode,\n  onProfileClick,\n}) => {\n  const [episodeName, setEpisodeName] = useState(\"\");\n\n  const fetchEpisodeName = async () => {\n    const response = await fetch(episode[0]);\n    const { name } = await response.json();\n    setEpisodeName(name);\n  };\n\n  useEffect(() => {\n    fetchEpisodeName();\n  }, []);\n\n  return (\n    <div className=\"row profile\" onClick={() => onProfileClick(id)}>\n      <div className=\"image\">\n        <img src={image} alt=\"character's photo\" />\n      </div>\n      <div className=\"column character-info\">\n        <span className=\"name truncate\" title={name}>\n          {name}\n        </span>\n        <div className=\"row general-info\">\n          <span className=\"text\">{status}</span>\n          <span className=\"text\">-</span>\n          <span className=\"text truncate\" title={species}>\n            {species}\n          </span>\n        </div>\n        <span className=\"text\">{gender}</span>\n        <div className=\"column\">\n          <span className=\"title\">Last known location:</span>\n          <span className=\"text truncate\" title={origin.name}>\n            {origin.name}\n          </span>\n        </div>\n        <div className=\"column\">\n          <span className=\"title\">First seen in:</span>\n          <span className=\"text truncate\" title={episodeName}>\n            {episodeName}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport ThemeContext from \"./ThemeContext\";\nimport FilterPanel from \"./FilterPanel\";\nimport Pagination from \"./Pagination\";\nimport Profile from \"./Profile\";\nimport \"./ProfilesPage.scss\";\nimport \"./Profile.scss\";\n\nconst ProfilesPage = () => {\n  const [profiles, setProfiles] = useState([]);\n  const [pageInfo, setPageInfo] = useState();\n  const [filterStatus, setFilterStatus] = useState(\"All\");\n  const [filterGender, setGenderStatus] = useState(\"All\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const history = useHistory();\n  const theme = useContext(ThemeContext);\n\n  const fetchProfiles = async () => {\n    const filterParams = {\n      status: filterStatus !== \"All\" ? filterStatus : \"\",\n      gender: filterGender !== \"All\" ? filterGender : \"\",\n    };\n    const params = new URLSearchParams(filterParams);\n\n    const response = await fetch(\n      `https://rickandmortyapi.com/api/character/?page=${currentPage}&${params.toString()}`\n    );\n    const { info, results } = await response.json();\n    setProfiles(results);\n    setPageInfo(info);\n  };\n\n  useEffect(() => {\n    fetchProfiles();\n  }, [currentPage, filterStatus, filterGender]);\n\n  const handlePageChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  const handleProfileClick = (profileId) => {\n    history.push(`${profileId}/profileDetails`);\n  };\n\n  const handleStatusChange = (e) => {\n    setFilterStatus(e.target.value);\n    setCurrentPage(1);\n  };\n\n  const handleGenderChange = (e) => {\n    setGenderStatus(e.target.value);\n    setCurrentPage(1);\n  };\n\n  return (\n    <>\n      <FilterPanel\n        onStatusChange={handleStatusChange}\n        onGenderChange={handleGenderChange}\n      />\n      <div className=\"add-btn-container\">\n        <button\n          className=\"add-btn\"\n          onClick={() => history.push(\"/newProfilePage\")}\n        >\n          Add Character\n        </button>\n      </div>\n      <div className=\"page\" style={{ backgroundColor: theme.background }}>\n        <div className=\"row characters\">\n          {profiles?.map((profile) => (\n            <Profile {...profile} onProfileClick={handleProfileClick} />\n          ))}\n        </div>\n        <Pagination\n          currentPage={currentPage}\n          pageCount={pageInfo?.pages}\n          onPageChange={handlePageChange}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default ProfilesPage;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"./ProfileDetailsPage.scss\";\n\nconst ProfileDetailsPage = () => {\n  const [profile, setProfile] = useState({\n    image: \"\",\n    name: \"\",\n    status: \"\",\n    species: \"\",\n    gender: \"\",\n    origin: \"\",\n    episode: [],\n  });\n\n  const [episodes, setEpisodes] = useState([]);\n  const { profileId } = useParams();\n\n  const fetchProfile = async () => {\n    const response = await fetch(\n      `https://rickandmortyapi.com/api/character/${profileId}`\n    );\n    const character = await response.json();\n    setProfile(character);\n    const episodeIds = character.episode.map((epUrl) => {\n      const index = epUrl.lastIndexOf(\"/\");\n      return epUrl.substring(index + 1);\n    });\n    fetchEpisodeNames(episodeIds);\n  };\n\n  const fetchEpisodeNames = async (episodeIds) => {\n    const response = await fetch(\n      `https://rickandmortyapi.com/api/episode/${episodeIds}`\n    );\n    const results = await response.json();\n    setEpisodes(Array.isArray(results) ? results : [results]);\n  };\n\n  useEffect(() => {\n    fetchProfile();\n  }, []);\n\n  return (\n    <div className=\"profile-details-page\">\n      <div className=\"profile-details\">\n        <div className=\"character-info\">\n          <div className=\"image\">\n            <img src={profile.image} alt=\"character's photo\" />\n          </div>\n          <p className=\"name\">{profile.name}</p>\n          <p className=\"status\">{profile.status}</p>\n        </div>\n        <div className=\"episodes\">\n          <ul className=\"episodes-list\">\n            {episodes?.map(({ name }) => {\n              return <li>{name}</li>;\n            })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileDetailsPage;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport NewProfilePage from \"./components/NewProfilePage\";\nimport ProfilesPage from \"./components/ProfilesPage\";\nimport ProfileDetailsPage from \"./components/ProfileDetailsPage\";\nimport WebFont from \"webfontloader\";\nimport ThemeContext from \"./components/ThemeContext\";\nimport \"./App.scss\";\n\nconst themes = {\n  light: {\n    color: \"#222222\",\n    background: \"#ffffff\",\n  },\n  dark: {\n    color: \"#ffffff\",\n    background: \"#222222\",\n  },\n};\n\nconst App = () => {\n  const [currentTheme, setCurrentTheme] = useState(\n    localStorage.getItem(\"theme\") || \"dark\"\n  );\n\n  useEffect(() => {\n    WebFont.load({\n      google: {\n        families: [\"Nunito\"],\n      },\n    });\n  }, []);\n\n  const handleThemeChange = ({ target }) => {\n    const selectedTheme = target.checked ? \"light\" : \"dark\";\n    setCurrentTheme(selectedTheme);\n    localStorage.setItem(\"theme\", selectedTheme);\n  };\n\n  return (\n    <ThemeContext.Provider value={themes[currentTheme]}>\n      <div className=\"theme-container\" style={themes[currentTheme]}>\n        <div className=\"switch\">\n          <span className=\"theme-label\">Change theme</span>\n          <input\n            type=\"checkbox\"\n            checked={currentTheme === \"light\"}\n            id=\"switch\"\n            onChange={handleThemeChange}\n          />\n          <label for=\"switch\">Toogle</label>\n        </div>\n        <Header />\n        <Router>\n          <Switch>\n            <Route path=\"/home\" component={ProfilesPage}></Route>\n            <Route\n              path=\"/:profileId/profileDetails\"\n              component={ProfileDetailsPage}\n            ></Route>\n            <Route path=\"/newProfilePage\" component={NewProfilePage}></Route>\n            <Redirect to=\"/home\" />\n          </Switch>\n        </Router>\n      </div>\n    </ThemeContext.Provider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ADD_PROFILE } from \"../actions\";\n\nconst profiles = (state = [], action) => {\n  switch (action.type) {\n    case ADD_PROFILE:\n      return [...state, action.payload];\n    default:\n      return state;\n  }\n};\n\nexport default profiles;\n","import { combineReducers } from \"redux\";\nimport profiles from \"./profiles\";\n\nconst rootReducer = combineReducers({\n  profiles,\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport rootReducer from \"./reducers\";\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}